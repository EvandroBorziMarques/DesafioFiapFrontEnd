@page "/update/{id}"

@using Interface.Models
@inject NavigationManager NavigationManager;
@inject Interface.Services.IAlunoService AlunoService;

<h1>Atualizar Aluno</h1>

<EditForm Model="aluno" OnValidSubmit="UpdateAluno">
    <div class="form-group mb-3">
        <label for="alunoName">Nome</label>
        <InputText @bind-Value="aluno.Name" class="form-control" id="alunoName" />
    </div>

    <div class="form-group mb-3">
        <label for="alunoUser">Usuário</label>
        <InputText @bind-Value="aluno.User" class="form-control" id="alunoUser" />
    </div>

    <div class="form-group mb-3">
        <label for="alunoPassword">Password</label>
        <InputText @bind-Value="aluno.Password" type="password" class="form-control" id="alunoPassword" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Salvar</button>

</EditForm>

@code {
    Aluno aluno = new();

    [Parameter] public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        aluno = await AlunoService.GetBy(Int32.Parse(id));
    }

    async Task UpdateAluno()
    {
        await AlunoService.Update(aluno);

        NavigationManager.NavigateTo("/");
    }
}
